#!/bin/sh
#
#  Copyright (c) 2017, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#
#   Description:
#       This script resolves all dependencies.
#

. "$(dirname "$0")"/_initrc

install_packages_apt()
{
    sudo apt-get update
    sudo apt-get install -y build-essential cmake libtool git

    # For wpantund
    sudo apt-get install -y libdbus-1-dev

    # This is for configuring wpantund
    sudo apt-get install -y autoconf-archive

    # mDNS
    sudo apt-get install -y libavahi-common-dev libavahi-client-dev avahi-daemon

    # Doxygen
    sudo apt-get install -y doxygen

    # For libcoap to generate .sym and .map
    sudo apt-get install -y ctags

    # Boost
    sudo apt-get install -y libboost-dev libboost-filesystem-dev libboost-system-dev

    # nat64
    sudo apt-get install -y tayga

    # jsoncpp
    sudo apt-get install -y libjsoncpp-dev
}

install_packages_opkg()
{
    echo 'opkg not supported currently' && false
}

install_packages_rpm()
{
    echo 'rpm not supported currently' && false
}

install_packages_brew()
{
    echo 'macOS not supported currently' && false
}

install_packages_source()
{
    echo 'source not supported currently' && false
}

install_packages()
{
    PM=source
    if which apt-get; then
        PM=apt
    elif which rpm; then
        PM=rpm
    elif which opkg; then
        PM=opkg
    elif which brew; then
        PM=brew
    fi
    install_packages_$PM
}

install_uncrustify()
{
    if test "$(uncrustify --version)" = 'uncrustify 0.64'; then
        return
    fi

    BUILD_DIR=/tmp/build-$(date +%s)
    mkdir -p $BUILD_DIR
    (cd $BUILD_DIR &&
        wget https://github.com/uncrustify/uncrustify/archive/uncrustify-0.64.tar.gz &&
        tar xzf uncrustify-0.64.tar.gz &&
        cd uncrustify-uncrustify-0.64 &&
        mkdir build &&
        cd build &&
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr .. &&
        make && make install DESTDIR=$STAGE_DIR &&
        uncrustify --version)
}

install_cpputest()
{
    if test -f $STAGE_DIR/usr/lib/libCppUTest.a; then
        return
    fi

    BUILD_DIR=/tmp/build-$(date +%s)
    mkdir -p $BUILD_DIR
    (cd $BUILD_DIR &&
        wget https://github.com/cpputest/cpputest/archive/v3.8.tar.gz &&
        tar xzf v3.8.tar.gz &&
        cd cpputest-3.8 &&
        ./autogen.sh &&
        ./configure --prefix=/usr &&
        make install DESTDIR=$STAGE_DIR)
}

main()
{
    . $BEFORE_HOOK
    install_packages
    install_uncrustify
    install_cpputest
    ./bootstrap
    . $AFTER_HOOK
}

main
